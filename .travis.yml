---
language: python
dist: trusty

env:
  global:
    - CACHE=${HOME}/cache
    - GHDL_HOST="http://downloads.sourceforge.net/project/ghdl-updates/Builds"
    - GHDL_URL="${GHDL_HOST}/ghdl-0.33/ghdl-0.33-x86_64-linux.tgz"
    - COLUMNS=80
    - LINES=50
matrix:
  include:
      # Test Vim bundled with Ubuntu 14.04 LTS (Vim is using Python 2)
    - dist: trusty
      env:  CI_TARGET=vim DISTRO=trusty
      python: 3.6

      # Test Vim bundled with Ubuntu 16.04 LTS (Vim is using Python 2)
    - dist: xenial
      env:  CI_TARGET=vim DISTRO=xenial
      python: 3.6

      # Test Vim version from Ubuntu 18.04 (updating from apt-get to use Python
      # 3)
    - dist: xenial
      env:  CI_TARGET=vim DISTRO=xenial VERSION=latest
      python: 3.5
    - dist: xenial
      env:  CI_TARGET=vim DISTRO=xenial VERSION=latest
      python: 3.6

    - dist: xenial
      env:  CI_TARGET=neovim DISTRO=xenial VERSION=master
      python: 3.5
    - dist: xenial
      env:  CI_TARGET=neovim DISTRO=xenial VERSION=master
      python: 3.6

addons:
  apt:
    packages:
      - autoconf
      - automake
      - cmake
      - g++
      - gettext
      - libgtk2.0-dev
      - libgnome2-dev
      - libtool
      - ninja-build
      - pkg-config
      - unzip
      - vim-gnome
      - xvfb

before_script:
  - if [ "${CI_TARGET}" == "neovim" ]; then
      sudo apt-get install libtool-bin;
    fi
  - pip install -U pip
  - git submodule update --init --recursive
  - mkdir -p ${CACHE}

  - cd ${TRAVIS_BUILD_DIR}
  - git clone --quiet --recursive --depth 1 https://github.com/suoto/hdlcc_ci ../hdlcc_ci
  - pushd ../hdlcc_ci/hdl_lib && git checkout hdlcc_ci && popd

  - ./dependencies/hdlcc/.ci/scripts/setup_ghdl.sh
  - ./.ci/setup_ghdl.sh
  - if [ "${CI_TARGET}" == "vim" ]; then source ./.ci/setup_vim.sh; fi
  - if [ "${CI_TARGET}" == "neovim" ]; then source ./.ci/setup_nvim.sh; fi

script:
  - set +xe
  - xvfb-run --server-args='-screen 0, 1024x768x24' -e /dev/stdout 
    ./run_tests.sh --log-capture -F

after_success:
  - export COVERALLS_PARALLEL=true
  - coveralls
  - bash <(curl -s https://codecov.io/bash)
after_failure:
  - echo '##########################################################'
  - echo '##########################################################'
  - cat /tmp/vim-hdl.log
  - echo '##########################################################'
  - echo '##########################################################'
  - cat /tmp/hdlcc-stdout.log
  - echo '##########################################################'
  - echo '##########################################################'
  - cat /tmp/hdlcc-stderr.log
  - echo '##########################################################'
  - echo '##########################################################'
  - cat /tmp/hdlcc.log
  - echo '##########################################################'
  - echo '##########################################################'
  - if [ "${CI_TARGET}" == "neovim" ]; then
      nvim +checkhealth +"w health.log" +qa;
      cat health.log
    fi
  - echo '##########################################################'
  - echo '##########################################################'
